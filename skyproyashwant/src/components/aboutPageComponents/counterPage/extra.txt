import React, { useEffect } from 'react';

const CounterupComponent = () => {
  useEffect(() => {
    const handleScroll = () => {
      document.querySelectorAll('.counterup-item').forEach((element) => {
        if (isInViewport(element)) {
          document.querySelectorAll('.odometer').forEach((el) => {
            el.innerHTML = el.getAttribute('data-odometer-final');
          });
        }
      });
    };

    const isInViewport = (element) => {
      const rect = element.getBoundingClientRect();
      return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <=
          (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    };

    // Attach the scroll event listener
    window.addEventListener('scroll', handleScroll);

    // Clean up the event listener when the component unmounts
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []); // Empty dependency array ensures that this effect runs once when the component mounts

  return (
    <div>
      {/* Your component JSX goes here */}
    </div>
  );
};

export default CounterupComponent;



import React, { useEffect } from 'react';

const Counter = ({ icon, target, label }) => {
  useEffect(() => {
    const counterElement = document.getElementById(`${label.toLowerCase()}-counter`);
    counterElement.innerText = '0';

    const updateCounter = () => {
      const currentCount = +counterElement.innerText;
      const increment = target / 200;

      if (currentCount < target) {
        counterElement.innerText = `${Math.ceil(currentCount + increment)}`;
        setTimeout(updateCounter, 1);
      } else {
        counterElement.innerText = target;
      }
    };

    updateCounter();
  }, [target, label]);

  return (
    <div className="counter-container">
      <i className={icon}></i>
      <div id={`${label.toLowerCase()}-counter`} className="counter"></div>
      <span>{label}</span>
    </div>
  );
};

const App = () => {
  return (
    <div>
      <Counter icon="fab fa-twitter fa-3x" target={12000} label="Twitter Followers" />
      <Counter icon="fab fa-youtube fa-3x" target={5000} label="YouTube Subscribers" />
      <Counter icon="fab fa-facebook fa-3x" target={7500} label="Facebook Fans" />
    </div>
  );
};

export default App;
